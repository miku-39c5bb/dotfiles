# set -g prefix C-b #
# unbind M-w # C-b即Ctrl+b键，unbind意味着解除绑定
# bind C-b send-prefix # 绑定Ctrl+a为新的指令前缀

# 从tmux v1.6版起，支持设置第二个指令前缀
unbind C-b
set -g prefix M-b
bind M-b send-prefix
set-option -g prefix2 M-` # alt + 2


# 新增一个加载配置文件的快捷指令 ，这样就可以随时随地load新的配置了
# 绑定快捷键为r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."


# 新增一个面板
unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录


# 开启鼠标支持
set-option -g mouse on # 等同于以上4个指令的效果

#set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"

# prefix + q 显示面板编号，然后按数字可以跳转到对应的面板
# 默认的面板编号显示时间太短，这里调整为5秒
set-option -g display-panes-time 5000

# 实现当前 pane 的背景突出显示
# 当分屏后，当前光标所在屏幕会正常显示，而其他屏幕会变灰
# set -g window-style 'fg=grey62,bg=grey19' 
# set -g window-active-style 'fg=terminal,bg=terminal'

# 状态栏背景和终端样式保持一致
# 不显示 tmux 的绿色横条
# 在 3.2 及更新版本中 
set -g status-style bg=default  
# 在较旧的版本中 
# set -g status-bg default


# Tmux Resurrect 会话手动保存与恢复，保存在~/.local/share/tmux/resurrect
# Tmux Continuum 会话定时保存自动恢复
#run-shell ~/.tmux/tmux-resurrect/resurrect.tmux
#run-shell ~/.tmux/tmux-continuum/continuum.tmux

# Tmux Continuum 默认每隔 15 分钟备份一次，设置为 1 小时一次：
# set -g @continuum-save-interval '60'



# 绑定hjkl键为面板切换的上下左右键
#bind -r k select-pane -U # 绑定k为↑
#bind -r j select-pane -D # 绑定j为↓
#bind -r h select-pane -L # 绑定h为←
#bind -r l select-pane -R # 绑定l为→


# bind -r e lastp # 选择最后一个面板
# bind -r ^e last # 选择最后一个窗口
# bind -r ^u swapp -U # 与前一个面板交换位置
# bind -r ^d swapp -D # 与后一个面板交换位置


# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
#bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
#bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
#bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
#bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

unbind n
unbind p
unbind 1
unbind 2
unbind 3
unbind 4
unbind 5
unbind 6
unbind 7
unbind 8
unbind 9
unbind 0

# set-option -g default-path "$PWD"

# 创建新会话
bind M-c new-session

# pane管理
bind -n M-o new-window -c "#{pane_current_path}"
bind -n M-O break-pane
bind -n M-Q kill-pane

# 同步执行当前窗口所有pane的命令
bind -n M-s setw synchronize-panes

# detach
bind -n M-d detach

# 窗口切换
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# 移动pane到某窗口
bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n M-# join-pane -t :3
bind -n M-$ join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9
bind -n M-) join-pane -t :0

# 新建pane
bind k split-window -vb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

# pane最大化
bind -n M-f resize-pane -Z

# pane切换
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R

# 调整pane大小
bind -n M-K resize-pane -U 3
bind -n M-J resize-pane -D 3
bind -n M-H resize-pane -L 3
bind -n M-L resize-pane -R 3

# 交换pane，改变pane布局
bind -n M-< swap-pane -U
bind -n M-> swap-pane -D
bind -n M-, previous-layout
bind -n M-. next-layout

# 拷贝模式
set -g mode-keys vi
bind -n M-v copy-mode
bind b list-buffers
bind p paste-buffer

